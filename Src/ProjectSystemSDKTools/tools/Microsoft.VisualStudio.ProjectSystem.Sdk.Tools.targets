<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <ProjectSystemName Condition="'$(ProjectSystemName)'==''">CSharpExtended</ProjectSystemName>
    <MachineWideXamlResourceDirectory>$(ProgramData)\ProjectSystems\</MachineWideXamlResourceDirectory>
    <CustomProjectExtensionsDirectory>$(MachineWideXamlResourceDirectory)$(ProjectSystemName)\</CustomProjectExtensionsDirectory>
    <RuleInjectionClassName Condition="'$(RuleInjectionClassName)'==''">ProjectProperties</RuleInjectionClassName>
  </PropertyGroup>
  
  <UsingTask TaskName="XamlRuleToCode" AssemblyFile="Microsoft.VisualStudio.ProjectSystem.Sdk.Tasks.dll"/>

  <Target Name="GenerateRulePrep">
    <ItemGroup>
      <_XamlPropertyRuleSource Include="@(XamlPropertyRule->'$(IntermediateOutputPath)%(FileName)$(DefaultLanguageSourceExtension)')"/>
      <Compile Include="@(_XamlPropertyRuleSource)">
        <ExcludeFromStyleCop>true</ExcludeFromStyleCop>
      </Compile>
      <Clean Include="@(_XamlPropertyRuleSource)" />
    </ItemGroup>
  </Target>

  <!-- The target needs to run so the task can populate the output items correctly. The task does an uptodate check on the files themselves-->
  <Target Name="GenerateRuleSourceFromXaml"
          BeforeTargets="BeforeCompile"
          DependsOnTargets="GenerateRulePrep"
          Condition="'@(XamlPropertyRule)' != ''">
    <XamlRuleToCode
       CreateFallbackRule="%(XamlPropertyRule.CreateFallbackRule)"
       NamespaceName="%(XamlPropertyRule.Namespace)"
       RuleMissingError="%(XamlPropertyRule.RuleMissingError)"
       PropertyMissingError="%(XamlPropertyRule.PropertyMissingError)"
       Inputs="@(XamlPropertyRule)"
       OutputDirectory="%(XamlPropertyRule.OutputPath)"
       DataAccess="%(XamlPropertyRule.DataAccess)"
       RuleBaseTypes="%(XamlPropertyRule.RuleBaseTypes)"
       RuleNamePrefix="%(XamlPropertyRule.RuleNamePrefix)"
       RuleInjectionClassName="%(XamlPropertyRule.RuleInjectionClassName)"
       RuleInjection="%(XamlPropertyRule.RuleInjection)"
       RuleInjectionContextName="%(XamlPropertyRule.RuleInjectionCatalog)"
       RuleInjectionItemTypePropertyName="%(XamlPropertyRule.RuleInjectionItemTypePropertyName)"
       RuleInjectionItemNamePropertyName="%(XamlPropertyRule.RuleInjectionItemNamePropertyName)"
       ProjectPropertiesContext="%(XamlPropertyRule.ProjectPropertiesContext)"
       IPropertyPagesCatalogTypeName="%(XamlPropertyRule.IPropertyPagesCatalogTypeName)"
       IRuleTypeName="%(XamlPropertyRule.IRuleTypeName)"
       ConfiguredProjectTypeName="%(XamlPropertyRule.ConfiguredProjectTypeName)"
       IEvaluatedPropertyTypeName="%(XamlPropertyRule.IEvaluatedPropertyTypeName)"
       IProjectPropertiesContextTypeName="%(XamlPropertyRule.IProjectPropertiesContextTypeName)">
      <Output TaskParameter="ResourcesToEmbed" ItemName="EmbeddedResource"/>
    </XamlRuleToCode>
  </Target>

  <Target Name="BeforeBuild">
    <PropertyGroup>
      <FilesToCleanCore>$(CustomProjectExtensionsDirectory)**\*</FilesToCleanCore>
    </PropertyGroup>
    <ItemGroup>
      <FilesToClean Include="@(FilesToCleanCore)"/>
    </ItemGroup>
    <Delete Files="@(FilesToClean)" Condition="'@(FilesToClean)'!=''"/>
  </Target>


  <Target Name="AfterBuild">
    <ItemGroup>
      <BuildSystemFile Include="@(XamlPropertyRule)"/>
      <BuildSystemFile Include="@(XamlPropertyRuleNoCodeBehind)"/>
      <BuildSystemFile Include="@(XamlPropertyProjectItemsSchema)"/>
      <BuildSystemFile Include="@(Page)"/>
    </ItemGroup>
    <Copy SourceFiles="@(BuildSystemFile)"
          Condition="'@(BuildSystemFile)'!=''"
          DestinationFiles="@(BuildSystemFile->'$(CustomProjectExtensionsDirectory)%(FileName)%(Extension)')" />
  </Target>
  
</Project>
